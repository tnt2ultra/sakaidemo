
package ru.demo.sakai.soap.bindings;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SakaiI18nService", targetNamespace = "http://webservices.sakaiproject.org/", wsdlLocation = "file:/E:/Anri/src/java_anri/sakaidemo/src/main/resources/wsdl/sakai_ws_soap_i18n.wsdl")
public class SakaiI18NService
    extends Service
{

    private final static URL SAKAII18NSERVICE_WSDL_LOCATION;
    private final static WebServiceException SAKAII18NSERVICE_EXCEPTION;
    private final static QName SAKAII18NSERVICE_QNAME = new QName("http://webservices.sakaiproject.org/", "SakaiI18nService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/E:/Anri/src/java_anri/sakaidemo/src/main/resources/wsdl/sakai_ws_soap_i18n.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SAKAII18NSERVICE_WSDL_LOCATION = url;
        SAKAII18NSERVICE_EXCEPTION = e;
    }

    public SakaiI18NService() {
        super(__getWsdlLocation(), SAKAII18NSERVICE_QNAME);
    }

    public SakaiI18NService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SAKAII18NSERVICE_QNAME, features);
    }

    public SakaiI18NService(URL wsdlLocation) {
        super(wsdlLocation, SAKAII18NSERVICE_QNAME);
    }

    public SakaiI18NService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SAKAII18NSERVICE_QNAME, features);
    }

    public SakaiI18NService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SakaiI18NService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SakaiI18N
     */
    @WebEndpoint(name = "SakaiI18nPort")
    public SakaiI18N getSakaiI18NPort() {
        return super.getPort(new QName("http://webservices.sakaiproject.org/", "SakaiI18nPort"), SakaiI18N.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SakaiI18N
     */
    @WebEndpoint(name = "SakaiI18nPort")
    public SakaiI18N getSakaiI18NPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservices.sakaiproject.org/", "SakaiI18nPort"), SakaiI18N.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SAKAII18NSERVICE_EXCEPTION!= null) {
            throw SAKAII18NSERVICE_EXCEPTION;
        }
        return SAKAII18NSERVICE_WSDL_LOCATION;
    }

}
